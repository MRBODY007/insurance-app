import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { useNavigate, useLocation } from "react-router-dom";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";
// import { getPaymentFrequencyLabel } from "../utils/helpers";
// import toast from "react-hot-toast"; // ‚úÖ Import toast
import InsuranceSuccessModal from "./InsuranceSuccessModal"; // ‚úÖ Import Modal
import { FileText, ShieldCheck, Hash } from "lucide-react"; // ‚úÖ Import ‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ
import Banner from "../assets/Banner.jpg"; // ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤‡∏†‡∏≤‡∏û
import CoverageTable from "./CoverageTable";
const formSchema = z.object({
  firstName: z.string().min(1, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠"),
  lastName: z.string().min(1, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"),
  gender: z.string().min(1, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®"),
  birthDate: z.string().min(1, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î"),
  idNumber: z
    .string()
    .regex(/^\d{13}$/, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô 13 ‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"), // ‚úÖ ‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 13 ‡∏´‡∏•‡∏±‡∏Å
  email: z.string().email("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"),
  phoneNumber: z.string().min(10, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"),
  address: z.string().min(1, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà"),
  city: z.string().min(1, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î"),
  postalCode: z.string().min(5, "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á"),
  agreeTerms: z
    .boolean()
    .refine((val) => val, "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏ü‡∏≠‡∏£‡πå‡∏°"),
});

const FillInfo: React.FC = () => {
  const navigate = useNavigate();
  const location = useLocation();
  const selectedPlan = location.state?.selectedPlan || null;
  // ‚úÖ ‡πÉ‡∏ä‡πâ useState ‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏° Modal
  const [isModalOpen, setIsModalOpen] = useState(false);
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm({
    resolver: zodResolver(formSchema),
  });

  const onSubmit = async (data: any) => {
    try {
      const requestData = {
        ...data,
        selectedPlan,
      };

      const response = await fetch("http://localhost:5001/api/save-insurance", {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(requestData),
      });

      if (response.status === 201) {
        // alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
        // toast.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!"); // üéâ Toast Alert ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
        setIsModalOpen(true); // ‚úÖ ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      }
    } catch (error) {
      console.error("Error:", error);
      // toast.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!"); // ‚ùå Toast Alert ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Error
    }
  };

  return (
    <div className="max-w-6xl mx-auto p-6 bg-gray-50 min-h-screen">
      {/* ‚úÖ ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ InsuranceSuccessModal */}
      <InsuranceSuccessModal
        isOpen={isModalOpen}
        onClose={() => setIsModalOpen(false)}
        navigate={navigate}
      />
      {/* ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠ */}
      <div className="relative w-full max-w-6xl mx-auto rounded-xl  overflow-hidden shadow-xl">
        {/* üîπ ‡∏†‡∏≤‡∏û‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á */}
        <img
          src={Banner}
          alt="Banner"
          className="w-full h-72 object-cover filter brightness-50"
        />

        {/* üîπ ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏±‡∏ö‡∏£‡∏π‡∏õ */}
        <div className="absolute inset-0 flex items-center justify-center">
          <div className="text-white text-center bg-[#f97316] bg-opacity-100 px-6 py-4 rounded-lg shadow-lg">
            {/* ‚úÖ ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
            <p className="text-3xl font-semibold text-[#354942]">
              ‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:{" "}
              <span className="font-bold text-[#354942]">{selectedPlan.packageName}</span>
            </p>

            {/* ‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á (‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏•‡πá‡∏Å‡∏Å‡∏ß‡πà‡∏≤) */}
            <p className="text-lg font-medium mt-1">
              ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á:{" "}
              <span className="font-bold">
                {selectedPlan.benefit.toLocaleString()} ‡∏ö‡∏≤‡∏ó
              </span>
            </p>
          </div>
        </div>
      </div>

      {selectedPlan ? (
        <div className="bg-gradient-to-br from-white to-gray-100 border border-gray-300 p-6 rounded-lg shadow-lg mt-4">
          <h3 className="text-xl font-bold text-gray-800 flex items-center">
            ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ú‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
          </h3>

          <div className="mt-4 space-y-3">
            <div className="flex items-center text-gray-700">
              <FileText className="w-5 h-5 text-gray-500 mr-2" />
              <span className="font-semibold">‡∏ä‡∏∑‡πà‡∏≠‡πÅ‡∏ú‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:</span>
              <span className="ml-2 text-gray-900 font-medium">
                {selectedPlan.packageName}
              </span>
            </div>

            <div className="flex items-center ">
              <ShieldCheck className="w-5 h-5  mr-2" />
              <span className="font-semibold">‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡∏£‡∏≠‡∏á:</span>
              <span className="ml-2 ">
                {selectedPlan.benefit.toLocaleString()} ‡∏ö‡∏≤‡∏ó
              </span>
            </div>

            <div className="flex items-center text-gray-700">
              <Hash className="w-5 h-5 text-blue-500 mr-2" />
              <span className="font-semibold">‡∏£‡∏´‡∏±‡∏™‡πÅ‡∏ú‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô:</span>
              <span className="ml-2 text-gray-900 font-medium">
                {selectedPlan.planCode}
              </span>
            </div>
          </div>
        </div>
        
      ) : (
        <p className="text-center text-red-500 mt-4">‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ß‡πâ</p>
      )}
      <div
         className="">
             <CoverageTable/>
        </div>
      {/* ‡∏ü‡∏≠‡∏£‡πå‡∏° */}
      <form
        onSubmit={handleSubmit(onSubmit)}
        noValidate
        className="bg-white p-6 shadow-md rounded-lg mt-6 space-y-4"
      >
        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ */}
        <h3 className="text-lg font-semibold text-gray-700">
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÄ‡∏≠‡∏≤‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block text-gray-600">‡∏ä‡∏∑‡πà‡∏≠ *</label>
            <input
              type="text"
              {...register("firstName")}
              className="w-full p-2 border rounded-md"
            />
            {errors.firstName && (
              <p className="text-red-500 text-sm">{errors.firstName.message}</p>
            )}
          </div>
          <div>
            <label className="block text-gray-600">‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• *</label>
            <input
              type="text"
              {...register("lastName")}
              className="w-full p-2 border rounded-md"
            />
            {errors.lastName && (
              <p className="text-red-500 text-sm">{errors.lastName.message}</p>
            )}
          </div>
          <div>
            <label className="block text-gray-600">‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ï‡∏£‡∏õ‡∏£‡∏∞‡∏ä‡∏≤‡∏ä‡∏ô *</label>
            <input
              type="text" // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô text ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç 13 ‡∏´‡∏•‡∏±‡∏Å
              {...register("idNumber")}
              className="w-full p-2 border rounded-md"
            />
            {errors.idNumber && (
              <p className="text-red-500 text-sm">{errors.idNumber.message}</p>
            )}
          </div>
          <div>
            <label className="block text-gray-600">‡πÄ‡∏û‡∏® *</label>
            <select
              {...register("gender")}
              className="w-full p-2 border rounded-md"
            >
              <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®</option>
              <option value="MALE">‡∏ä‡∏≤‡∏¢</option>
              <option value="FEMALE">‡∏´‡∏ç‡∏¥‡∏á</option>
            </select>
            {errors.gender && (
              <p className="text-red-500 text-sm">{errors.gender.message}</p>
            )}
          </div>
        </div>

        {/* ‡πÄ‡∏û‡∏® & ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block text-gray-600">‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î *</label>
            <input
              type="date"
              {...register("birthDate")}
              className="w-full p-2 border rounded-md"
            />
            {errors.birthDate && (
              <p className="text-red-500 text-sm">{errors.birthDate.message}</p>
            )}
          </div>
          <div>
            <label className="block text-gray-600">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà *</label>
            <textarea
              {...register("address")}
              className="w-full p-2 border rounded-md"
            />
            {errors.address && (
              <p className="text-red-500 text-sm">{errors.address.message}</p>
            )}
          </div>
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block text-gray-600">‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î *</label>
            <input
              type="text"
              {...register("city")}
              className="w-full p-2 border rounded-md"
            />
            {errors.city && (
              <p className="text-red-500 text-sm">{errors.city.message}</p>
            )}
          </div>
          <div>
            <label className="block text-gray-600">‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå *</label>
            <input
              type="text"
              {...register("postalCode")}
              className="w-full p-2 border rounded-md"
            />
            {errors.postalCode && (
              <p className="text-red-500 text-sm">
                {errors.postalCode.message}
              </p>
            )}
          </div>
        </div>
        {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ */}
        <h3 className="text-lg font-semibold text-gray-700">
          ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö
        </h3>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div>
            <label className="block text-gray-600">‡∏≠‡∏µ‡πÄ‡∏°‡∏• *</label>
            <input
              type="email"
              {...register("email")}
              className="w-full p-2 border rounded-md"
            />
            {errors.email && (
              <p className="text-red-500 text-sm">{errors.email.message}</p>
            )}
          </div>
          <div>
            <label className="block text-gray-600">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå *</label>
            <input
              type="text"
              {...register("phoneNumber")}
              className="w-full p-2 border rounded-md"
            />
            {errors.phoneNumber && (
              <p className="text-red-500 text-sm">
                {errors.phoneNumber.message}
              </p>
            )}
          </div>
        </div>

        {/* ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}

        {/* ‡∏Ç‡πâ‡∏≠‡∏ï‡∏Å‡∏•‡∏á & ‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢ */}
        <div>
          <label className="flex items-center space-x-2 text-gray-700">
            <input type="checkbox" {...register("agreeTerms")} />
            <span>‡∏â‡∏±‡∏ô‡∏¢‡∏≠‡∏°‡∏£‡∏±‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏ô‡πÇ‡∏¢‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß</span>
          </label>
          {errors.agreeTerms && (
            <p className="text-red-500 text-sm">{errors.agreeTerms.message}</p>
          )}
        </div>

        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
        <button
          type="submit"
          className="w-full bg-orange-600 text-white py-3 rounded-md font-semibold hover:bg-orange-700 transition"
        >
          ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
        </button>
      </form>
    </div>
  );
};

export default FillInfo;
